doctype html
// Basic
head
  meta(charset='utf-8')
  meta(http-equiv='X-UA-Compatible' content='IE=edge')
  // Mobile Metas
  meta(name='viewport' content='width=device-width, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no')
  // Site Metas
  title Perfect - Responsive HTML5 Template
  meta(name='keywords' content='')
  meta(name='description' content='')
  meta(name='author' content='')
  // Site Icons
  link(rel='shortcut icon' href='#' type='image/x-icon')
  link(rel='apple-touch-icon' href='#')
  // Bootstrap CSS
  link(rel='stylesheet' href='css/bootstrap.min.css')
  // Pogo Slider CSS
  link(rel='stylesheet' href='css/pogo-slider.min.css')
  // Site CSS
  link(rel='stylesheet' href='css/style.css')
  // Responsive CSS
  link(rel='stylesheet' href='css/responsive.css')
  // Custom CSS
  link(rel='stylesheet' href='css/custom.css')
  //if lt IE 9
    script(src='https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js')
    script(src='https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js')
// LOADER
#preloader
  .loader
    img(src='images/loader.gif' alt='#')
// end loader
// END LOADER
// Start header
include layouts/header.pug

// End header
// section
section.inner_banner
  .container
    .row
      .col-12
        .full
          h3 About us
// end section
// section
.section.margin-top_50
  .container
    .row
      .col-md-6.layout_padding_2
        .full
          .heading_main.text_align_left
            h2
              span Welcome To
              |  Education
          .full
            p
              | Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
              | Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
              | Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
              | Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum
          .full
            a.hvr-radial-out.button-theme(href='#') About more
      .col-md-6
        .full
          img(src='images/img2.png' alt='#')
// end section
// section
.section.layout_padding
  .container
    .row
      .col-md-12
        .full
          .heading_main.text_align_center
            h2
              span Popular 
              | Courses
      .col-md-4
        .full.blog_img_popular
          img.img-responsive(src='images/p1.png' alt='#')
          h4 Financial Accounting
      .col-md-4
        .full.blog_img_popular
          img.img-responsive(src='images/p2.png' alt='#')
          h4 Managerial Accounting
      .col-md-4
        .full.blog_img_popular
          img.img-responsive(src='images/p3.png' alt='#')
          h4 Intermediate Accounting
// end section
// Start Footer
include layouts/footer.pug

// End Footer
.footer_bottom
  .container
    .row
      .col-12
        p.crp &copy; Copyrights 2019 design by html.design
a#scroll-to-top.hvr-radial-out(href='#')
  i.fa.fa-angle-up
// ALL JS FILES
script(src='js/jquery.min.js')
script(src='js/popper.min.js')
script(src='js/bootstrap.min.js')
// ALL PLUGINS
script(src='js/jquery.magnific-popup.min.js')
script(src='js/jquery.pogo-slider.min.js')
script(src='js/slider-index.js')
script(src='js/smoothscroll.js')
script(src='js/form-validator.min.js')
script(src='js/contact-form-script.js')
script(src='js/isotope.min.js')
script(src='js/images-loded.min.js')
script(src='js/custom.js')
script.
  /* counter js */
  (function ($) {
  $.fn.countTo = function (options) {
  options = options || {};
  return $(this).each(function () {
  // set options for current element
  var settings = $.extend({}, $.fn.countTo.defaults, {
  from:            $(this).data('from'),
  to:              $(this).data('to'),
  speed:           $(this).data('speed'),
  refreshInterval: $(this).data('refresh-interval'),
  decimals:        $(this).data('decimals')
  }, options);
  // how many times to update the value, and how much to increment the value on each update
  var loops = Math.ceil(settings.speed / settings.refreshInterval),
  increment = (settings.to - settings.from) / loops;
  // references & variables that will change with each update
  var self = this,
  $self = $(this),
  loopCount = 0,
  value = settings.from,
  data = $self.data('countTo') || {};
  $self.data('countTo', data);
  // if an existing interval can be found, clear it first
  if (data.interval) {
  clearInterval(data.interval);
  }
  data.interval = setInterval(updateTimer, settings.refreshInterval);
  // initialize the element with the starting value
  render(value);
  function updateTimer() {
  value += increment;
  loopCount++;
  render(value);
  if (typeof(settings.onUpdate) == 'function') {
  settings.onUpdate.call(self, value);
  }
  if (loopCount >= loops) {
  // remove the interval
  $self.removeData('countTo');
  clearInterval(data.interval);
  value = settings.to;
  if (typeof(settings.onComplete) == 'function') {
  settings.onComplete.call(self, value);
  }
  }
  }
  function render(value) {
  var formattedValue = settings.formatter.call(self, value, settings);
  $self.html(formattedValue);
  }
  });
  };
  $.fn.countTo.defaults = {
  from: 0,               // the number the element should start at
  to: 0,                 // the number the element should end at
  speed: 1000,           // how long it should take to count between the target numbers
  refreshInterval: 100,  // how often the element should be updated
  decimals: 0,           // the number of decimal places to show
  formatter: formatter,  // handler for formatting the value before rendering
  onUpdate: null,        // callback method for every time the element is updated
  onComplete: null       // callback method for when the element finishes updating
  };
  function formatter(value, settings) {
  return value.toFixed(settings.decimals);
  }
  }(jQuery));
  jQuery(function ($) {
  // custom formatting example
  $('.count-number').data('countToOptions', {
  formatter: function (value, options) {
  return value.toFixed(options.decimals).replace(/\\B(?=(?:\d{3})+(?!\d))/g, ',');
  }
  });
  // start all the timers
  $('.timer').each(count);
  function count(options) {
  var $this = $(this);
  options = $.extend({}, options || {}, $this.data('countToOptions') || {});
  $this.countTo(options);
  }
  });
